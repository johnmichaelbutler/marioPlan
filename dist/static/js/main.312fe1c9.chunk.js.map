{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/Spinner.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","firebase","auth","then","type","props","profile","className","to","href","onClick","initials","SignedOutLinks","state","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastname","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","event","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","Spinner","SpinnerOverlay","SpinnerContainer","styled","div","AuthIsLoaded","children","useSelector","isLoaded","App","path","component","ProjectDetails","exact","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uQAsBeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCCV,SAACA,EAAUE,EAAX,GAAuC,EAAjBC,YAC3BC,IAASC,OAAOJ,UACbK,MAAK,WACJN,EAAS,CAAEO,KAAM,8BDAVR,EAjBO,SAACS,GAAW,IACxBP,EAAqBO,EAArBP,QAASQ,EAAYD,EAAZC,QACjB,OACE,wBAAIC,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,KAAK,IAAIC,QAASZ,GAArB,YACJ,4BAAI,kBAAC,IAAD,CAASU,GAAG,IAAID,UAAU,mCAAmCD,EAAQK,eEChEC,EATQ,WACrB,OACE,wBAAIL,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCqBKZ,eATS,SAACiB,GAEvB,OADAC,QAAQC,IAAIF,GACL,CACLX,KAAMW,EAAMZ,SAASC,KACrBI,QAASO,EAAMZ,SAASK,WAKbV,EAtBA,SAACS,GAAW,IACjBH,EAAkBG,EAAlBH,KAAMI,EAAYD,EAAZC,QACRU,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeX,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,mBAAvB,aACES,O,iDCgBKE,EA1BO,SAACb,GAAW,IACxBc,EAAkBd,EAAlBc,cACR,OACE,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACVY,GAAiBA,EAAcC,KAAI,SAAAC,GACnC,OACE,wBAAIC,IAAMD,EAAKE,IACb,0BAAMhB,UAAU,aAAac,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKlB,UAAU,uBACZmB,IAAOL,EAAKM,KAAKC,UAAUC,oBCFjCC,EAZQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKxB,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,0CAAgBD,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,uBAAG3B,UAAU,aAAamB,IAAOK,EAAQI,UAAUP,SAASQ,YAAYC,eCWjEC,EAhBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAKhC,UAAU,wBAEXgC,GAAYA,EAASnB,KAAI,SAAAW,GACvB,OACE,kBAAC,IAAD,CAAMvB,GAAE,mBAAcuB,EAAQR,IAAMD,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAAgBQ,QAASA,U,QCHjCS,E,uKACK,MAEmCC,KAAKpC,MAAvCkC,EAFD,EAECA,SAAUrC,EAFX,EAEWA,KAAMiB,EAFjB,EAEiBA,cAExB,OAAIjB,EAAKe,IAGP,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAagC,SAAUA,KAEzB,yBAAKhC,UAAU,wBACb,kBAAC,EAAD,CAAeY,cAAeA,OATjB,kBAAC,IAAD,CAAUX,GAAG,gB,GALdkC,IAAMC,WA8BfC,cACbhD,aATsB,SAACiB,GACvB,MAAO,CACL0B,SAAU1B,EAAMgC,UAAUC,QAAQP,SAClCrC,KAAMW,EAAMZ,SAASC,KACrBiB,cAAeN,EAAMgC,UAAUC,QAAQ3B,kBAOzC4B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WALhDL,CAObJ,GCDaI,cACbhD,aAXsB,SAACiB,EAAOsC,GAC9B,IAAM5B,EAAK4B,EAASC,MAAMC,OAAO9B,GAC3BgB,EAAW1B,EAAMgC,UAAUS,KAAKf,SAEtC,MAAO,CACLR,QAFcQ,EAAWA,EAAShB,GAAM,KAGxCrB,KAAMW,EAAMZ,SAASC,SAMvB6C,2BAAiB,CACf,CAAEC,WAAY,cAHHJ,EArCQ,SAACvC,GAAW,IACzBH,EAAkBG,EAAlBH,KAAM6B,EAAY1B,EAAZ0B,QACd,OAAI7B,EAAKe,IACLc,EAEF,yBAAKxB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAewB,EAAQC,OACvC,2BAAKD,EAAQN,UAEf,yBAAKlB,UAAU,wCACb,0CAAgBwB,EAAQE,gBAAxB,IAA0CF,EAAQwB,gBAClD,6BAAM7B,IAAOK,EAAQI,UAAUP,SAASQ,YAAYC,eAOxD,yBAAK9B,UAAU,oBACb,mDAnBe,kBAAC,IAAD,CAAUC,GAAG,e,QCJ9BgD,E,4MACJ3C,MAAQ,CACN4C,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOvC,GAAKqC,EAAME,OAAOC,S,EAIpCC,aAAe,SAACJ,GACdA,EAAMK,iBACN,EAAK5D,MAAM6D,OAAO,EAAKrD,Q,uDAGf,IAAD,EACqB4B,KAAKpC,MAAzB8D,EADD,EACCA,UACR,OAFO,EACYjE,KACXe,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAE/B,yBAAKD,UAAU,aACb,0BAAM6D,SAAU3B,KAAKuB,aAAczD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO8D,QAAQ,SAAf,SACA,2BAAOjE,KAAK,QAAQmB,GAAG,QAAQ+C,SAAU7B,KAAKkB,gBAEhD,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,YAAf,YACA,2BAAOjE,KAAK,WAAWmB,GAAG,WAAW+C,SAAU7B,KAAKkB,gBAEtD,yBAAKpD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACE,yBAAKA,UAAU,mBACX4D,EAAY,2BAAIA,GAAiB,a,GAnC9BxB,aAyDN/C,eAbS,SAACiB,GACvB,MAAO,CACLsD,UAAWtD,EAAMX,KAAKiE,UACtBjE,KAAMW,EAAMZ,SAASC,SAIE,SAACL,GAC1B,MAAO,CACLqE,OAAQ,SAACK,GAAD,OAAW1E,GRvDA2E,EQuDgBD,ERtD9B,SAAC1E,EAAUE,EAAX,GAAuC,EAAjBC,YAG3BC,IAASC,OAAOuE,2BACdD,EAAYf,MACZe,EAAYd,UACZvD,MAAK,WACLN,EAAS,CAAEO,KAAM,qBAChBsE,OAAM,SAACC,GACR9E,EAAS,CAAEO,KAAM,cAAeuE,cAVhB,IAACH,MQ2DR5E,CAA6C4D,GCzDtDoB,E,4MACJ/D,MAAQ,CACN4C,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGZnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOvC,GAAKqC,EAAME,OAAOC,S,EAIpCC,aAAe,SAACJ,GACdA,EAAMK,iBACNnD,QAAQC,IAAI,EAAKF,OACjB,EAAKR,MAAM0E,OAAO,EAAKlE,Q,uDAGf,IAAD,EACqB4B,KAAKpC,MAAzBH,EADD,EACCA,KAAMiE,EADP,EACOA,UACd,OAAGjE,EAAKe,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAE/B,yBAAKD,UAAU,aACb,0BAAM6D,SAAU3B,KAAKuB,aAAczD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO8D,QAAQ,SAAf,SACA,2BAAOjE,KAAK,QAAQmB,GAAG,QAAQ+C,SAAU7B,KAAKkB,gBAEhD,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,YAAf,YACA,2BAAOjE,KAAK,WAAWmB,GAAG,WAAW+C,SAAU7B,KAAKkB,gBAEtD,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,aAAf,cACA,2BAAOjE,KAAK,OAAOmB,GAAG,YAAY+C,SAAU7B,KAAKkB,gBAEnD,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,YAAf,aACA,2BAAOjE,KAAK,OAAOmB,GAAG,WAAW+C,SAAU7B,KAAKkB,gBAElD,yBAAKpD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,oBACX4D,EAAY,2BAAKA,GAAkB,a,GA9C9BxB,aAoEN/C,eAbS,SAACiB,GACvB,MAAO,CACLX,KAAMW,EAAMZ,SAASC,KACrBiE,UAAWtD,EAAMX,KAAKiE,cAIC,SAACtE,GAC1B,MAAO,CACLkF,OAAQ,SAACR,GAAD,OAAW1E,GT1CAmF,ES0CgBT,ETzC9B,SAAC1E,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IACrD6C,GAAYoC,EADwC,EAAlBA,gBAGxChF,IAASC,OAAOgF,+BACdF,EAAQvB,MACRuB,EAAQtB,UACRvD,MAAK,SAAAgF,GACL,OAAOtC,EAAUG,WAAW,SAASoC,IAAID,EAAK3D,KAAKP,KAAKoE,IAAI,CAC1DR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBnE,SAAUqE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEnD3E,MAAK,WACNN,EAAS,CAAEO,KAAM,sBAChBsE,OAAM,SAACC,GACR9E,EAAS,CAAEO,KAAM,eAAgBuE,cAhBjB,IAACK,MS8CRpF,CAA6CgF,G,QCpEtDU,E,4MACJzE,MAAQ,CACNmB,MAAO,GACPP,QAAS,I,EAGXkC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOvC,GAAKqC,EAAME,OAAOC,S,EAGpCC,aAAe,SAACJ,GACdA,EAAMK,iBACN,EAAK5D,MAAMkF,cAAc,EAAK1E,OAC9B,EAAKR,MAAMmF,QAAQC,KAAK,M,uDAKxB,OADiBhD,KAAKpC,MAAdH,KACCe,IAEP,yBAAKV,UAAU,aACb,0BAAM6D,SAAU3B,KAAKuB,aAAczD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACb,2BAAO8D,QAAQ,SAAf,SACA,2BAAOjE,KAAK,OAAOmB,GAAG,QAAQ+C,SAAU7B,KAAKkB,gBAE/C,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,WAAf,mBACA,8BAAU9C,GAAG,UAAUhB,UAAU,uBAAuB+D,SAAU7B,KAAKkB,gBAEzE,yBAAKpD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,aAda,kBAAC,IAAD,CAAUC,GAAG,gB,GAnBVmC,aAqDb/C,eAZS,SAACiB,GACvB,MAAO,CACLX,KAAMW,EAAMZ,SAASC,SAIE,SAAAL,GACzB,MAAO,CACL0F,cAAe,SAACxD,GAAD,OAAalC,ECtDH,SAACkC,GAE5B,OAAO,SAAClC,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAEvD6C,GAAYoC,EAF0C,EAAnBA,gBAGnC3E,EAAUP,IAAWE,SAASK,QAC9BoF,EAAW3F,IAAWE,SAASC,KAAKe,IAE1C4B,EAAUG,WAAW,YAAY2C,IAAjC,2BACK5D,GADL,IAEEE,gBAAiB3B,EAAQuE,UACzBtB,eAAgBjD,EAAQwE,SACxBY,SAAUA,EACVvD,UAAW,IAAIyD,QACdzF,MAAK,WAENN,EAAS,CACPO,KAAM,iBACN2B,eAED2C,OAAM,SAACC,GACR9E,EAAS,CAAEO,KAAM,uBAAwBuE,YDiCNY,CAAcxD,QAIxCnC,CAA6C0F,G,wrBEvD5D,IAMeO,EANC,kBACd,kBAACC,EAAD,KACE,kBAACC,EAAD,QAOED,EAAiBE,IAAOC,IAAV,KAQdF,EAAmBC,IAAOC,IAAV,KCPtB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBjG,EAAOkG,aAAY,SAAAvF,GAAK,OAAIA,EAAMZ,SAASC,QACjD,OAAKmG,mBAASnG,GACPiG,EADqB,kBAAC,EAAD,MAwBfG,MApBf,WACE,OACE,kBAAC,IAAD,KACE,kBAACJ,EAAD,KACE,yBAAK3F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgG,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWhD,IACjC,kBAAC,IAAD,CAAO+C,KAAK,UAAUC,UAAW5B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAWlB,IAEjC,kBAAC,IAAD,CAAOoB,OAAK,EAACH,KAAK,IAAIC,UAAWhE,SCnBzBmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1D,MACvB,2DClBN,IAAM2D,EAAY,CAChB5C,UAAW,MA2CE6C,EAxCK,WAAgC,IAA/BnG,EAA8B,uDAAtBkG,EAAWE,EAAW,uCACjD,OAAOA,EAAO7G,MACZ,IAAK,cACH,OAAO,2BACFS,GADL,IAEEsD,UAAW,iBAGf,IAAK,gBAEH,OADArD,QAAQC,IAAI,iBACL,2BACFF,GADL,IAEEsD,UAAW,OAGf,IAAK,kBAEH,OADArD,QAAQC,IAAI,mBACL,eACFF,GAGP,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACL,2BACFF,GADL,IAEEsD,UAAW,OAGf,IAAK,eAEH,OADArD,QAAQC,IAAI,gBACL,2BACFF,GADL,IAEEsD,UAAW8C,EAAOtC,IAAIuC,UAG1B,QACE,OAAOrG,ICxCPkG,EAAY,CAChBxE,SAAU,CACR,CAAChB,GAAI,IAAKS,MAAO,qBAAsBP,QAAS,kBAChD,CAACF,GAAI,IAAKS,MAAO,wBAAyBP,QAAS,kBACnD,CAACF,GAAI,IAAKS,MAAO,sBAAuBP,QAAS,oBAmBtC0F,EAfQ,WAAgC,IAA/BtG,EAA8B,uDAAtBkG,EAAWE,EAAW,uCACpD,OAAOA,EAAO7G,MACZ,IAAK,iBAEH,OADAU,QAAQC,IAAI,kBAAmBkG,EAAOlF,SAC/BlB,EAET,IAAK,uBAEH,OADAC,QAAQC,IAAI,uBAAwBkG,EAAOtC,KACpC9D,EAET,QACE,OAAOA,I,QCNEuG,EAPKC,YAAgB,CAClCnH,KAAM8G,EACNjF,QAASoF,EACTtE,UAAWyE,mBACXrH,SAAUsH,oB,yCCOZtH,KAASuH,cAXe,CACtBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB/H,KAAS4C,YAEM5C,UAAf,ECDMgI,GAAQC,YACZd,EACAxE,YACEuF,YAAgBC,IAAMC,kBAAkB,CAAEpD,4BAAcjF,6BACxDsI,yBAAerI,KAAUsI,MAUvBC,GAAW,CACfvI,cACAwI,OARgB,CAChBC,YAAa,QACbC,wBAAwB,GAOxB9I,SAAUoI,GAAMpI,SAChB+I,mDAIFC,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,IACf,kBAAC,6BAA+BO,GAC9B,kBAAC,EAAD,QAGJO,SAASC,eAAe,SLoFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhJ,MAAK,SAAAiJ,GACJA,EAAaC,gBAEd3E,OAAM,SAAA4E,GACLxI,QAAQwI,MAAMA,EAAMpC,c","file":"static/js/main.312fe1c9.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n  const { signOut, profile } = props;\n  return (\n    <ul className='right'>\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a href='/' onClick={signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</NavLink></li>\n    </ul>\n  )\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import firebase from 'firebase';\n\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    // Allows us to connect to our firebase\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS'})\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err})\n    })\n  }\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    firebase.auth().signOut()\n      .then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS'})\n      });\n  }\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Log In</NavLink></li>\n    </ul>\n  )\n};\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo left'>MarioPlan</Link>\n        { links }\n      </div>\n    </nav>\n  )\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n};\n\n\nexport default connect(\n  mapStateToProps\n)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className='notifications'>\n            { notifications && notifications.map(item => {\n              return (\n                <li key={ item.id }>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Created By: {project.authorFirstName} {project.authorLastname}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {\n        projects && projects.map(project => {\n          return (\n            <Link to={`/project/${project.id}`} key={project.id} >\n              <ProjectSummary project={project}/>\n            </Link>\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default ProjectList;","import React from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends React.Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  // Gives us access to our firestore DB\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { auth, project } = props;\n  if(!auth.uid) return <Redirect to='/signin' />\n  if (project) {\n    return (\n    <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{ project.title }</span>\n          <p>{ project.content }</p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n        </div>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div className='container center'>\n        <p>Loading project....</p>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{authError}</p> : null}\n              </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"text-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createProject } from '../../store/actions/projectActions';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  // Returns a function for redux thunk\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // Make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    // Thunk returns a promise\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      // Then dispatch the action\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spinner = () => (\n  <SpinnerOverlay>\n    <SpinnerContainer />\n  </SpinnerOverlay>\n);\n\nexport default Spinner;\n\n\nconst SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport Spinner from './components/auth/Spinner';\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <Spinner />;\n  return children\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AuthIsLoaded>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n\n            <Route exact path='/' component={Dashboard} />\n          </Switch>\n        </div>\n      </AuthIsLoaded>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('Signout Success');\n      return {\n        ...state\n      }\n\n    case 'SIGNUP_SUCCESS':\n      console.log('Signup Success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('Signup Error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","const initState = {\n  projects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'},\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","// imports core functionaltiy using /app\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nexport const fbConfig = {\n  apiKey: \"AIzaSyDe8ZTjiZsaggv14C0jqGifVE4m87GUM5Q\",\n  authDomain: \"marioplan-8b34e.firebaseapp.com\",\n  databaseURL: \"https://marioplan-8b34e.firebaseio.com\",\n  projectId: \"marioplan-8b34e\",\n  storageBucket: \"marioplan-8b34e.appspot.com\",\n  messagingSenderId: \"312417872634\",\n  appId: \"1:312417872634:web:9df6c4d7792f40e6c9b743\",\n  measurementId: \"G-P63R62M5BB\"\n};\n// Initialize Firebase\nfirebase.initializeApp(fbConfig);\nfirebase.firestore();\n\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\n\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}